// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MessageHeader.proto
// Protobuf C++ Version: 5.28.2

#include "MessageHeader.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace GaoProtobuf {

inline constexpr MessageHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fromid_{0},
        toid_{0},
        groupid_{0},
        typeid__{0},
        namespaceid_{0},
        classid_{0},
        methodid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageHeader::MessageHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageHeaderDefaultTypeInternal() {}
  union {
    MessageHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageHeaderDefaultTypeInternal _MessageHeader_default_instance_;
}  // namespace GaoProtobuf
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_MessageHeader_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_MessageHeader_2eproto = nullptr;
const ::uint32_t
    TableStruct_MessageHeader_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.fromid_),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.toid_),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.groupid_),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.typeid__),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.namespaceid_),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.classid_),
        PROTOBUF_FIELD_OFFSET(::GaoProtobuf::MessageHeader, _impl_.methodid_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::GaoProtobuf::MessageHeader)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::GaoProtobuf::_MessageHeader_default_instance_._instance,
};
const char descriptor_table_protodef_MessageHeader_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023MessageHeader.proto\022\013GaoProtobuf\"\206\001\n\rM"
    "essageHeader\022\016\n\006fromId\030\001 \001(\005\022\014\n\004toId\030\002 \001"
    "(\005\022\017\n\007groupId\030\003 \001(\005\022\016\n\006typeId\030\004 \001(\005\022\023\n\013n"
    "amespaceId\030\005 \001(\005\022\017\n\007classId\030\006 \001(\005\022\020\n\010met"
    "hodId\030\007 \001(\005B\016\252\002\013GaoProtobufb\006proto3"
};
static ::absl::once_flag descriptor_table_MessageHeader_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_MessageHeader_2eproto = {
    false,
    false,
    195,
    descriptor_table_protodef_MessageHeader_2eproto,
    "MessageHeader.proto",
    &descriptor_table_MessageHeader_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_MessageHeader_2eproto::offsets,
    file_level_enum_descriptors_MessageHeader_2eproto,
    file_level_service_descriptors_MessageHeader_2eproto,
};
namespace GaoProtobuf {
// ===================================================================

class MessageHeader::_Internal {
 public:
};

MessageHeader::MessageHeader(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GaoProtobuf.MessageHeader)
}
MessageHeader::MessageHeader(
    ::google::protobuf::Arena* arena, const MessageHeader& from)
    : MessageHeader(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MessageHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MessageHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromid_),
           0,
           offsetof(Impl_, methodid_) -
               offsetof(Impl_, fromid_) +
               sizeof(Impl_::methodid_));
}
MessageHeader::~MessageHeader() {
  // @@protoc_insertion_point(destructor:GaoProtobuf.MessageHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MessageHeader::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MessageHeader_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MessageHeader::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MessageHeader>(),
            ::google::protobuf::Message::GetNewImpl<MessageHeader>(),
            ::google::protobuf::Message::GetClearImpl<MessageHeader>(), &MessageHeader::ByteSizeLong,
                &MessageHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_._cached_size_),
            false,
        },
        &MessageHeader::kDescriptorMethods,
        &descriptor_table_MessageHeader_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MessageHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> MessageHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GaoProtobuf::MessageHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 fromId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.fromid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.fromid_)}},
    // int32 toId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.toid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.toid_)}},
    // int32 groupId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.groupid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.groupid_)}},
    // int32 typeId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.typeid__), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.typeid__)}},
    // int32 namespaceId = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.namespaceid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.namespaceid_)}},
    // int32 classId = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.classid_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.classid_)}},
    // int32 methodId = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageHeader, _impl_.methodid_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.methodid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fromId = 1;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.fromid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 toId = 2;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.toid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 groupId = 3;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.groupid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 typeId = 4;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.typeid__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 namespaceId = 5;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.namespaceid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 classId = 6;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.classid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 methodId = 7;
    {PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.methodid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:GaoProtobuf.MessageHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.fromid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.methodid_) -
      reinterpret_cast<char*>(&_impl_.fromid_)) + sizeof(_impl_.methodid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageHeader::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageHeader& this_ = static_cast<const MessageHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageHeader::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GaoProtobuf.MessageHeader)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 fromId = 1;
          if (this_._internal_fromid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_fromid(), target);
          }

          // int32 toId = 2;
          if (this_._internal_toid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_toid(), target);
          }

          // int32 groupId = 3;
          if (this_._internal_groupid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_groupid(), target);
          }

          // int32 typeId = 4;
          if (this_._internal_typeid_() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_typeid_(), target);
          }

          // int32 namespaceId = 5;
          if (this_._internal_namespaceid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_namespaceid(), target);
          }

          // int32 classId = 6;
          if (this_._internal_classid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_classid(), target);
          }

          // int32 methodId = 7;
          if (this_._internal_methodid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_methodid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GaoProtobuf.MessageHeader)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageHeader::ByteSizeLong(const MessageLite& base) {
          const MessageHeader& this_ = static_cast<const MessageHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageHeader::ByteSizeLong() const {
          const MessageHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GaoProtobuf.MessageHeader)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 fromId = 1;
            if (this_._internal_fromid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fromid());
            }
            // int32 toId = 2;
            if (this_._internal_toid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_toid());
            }
            // int32 groupId = 3;
            if (this_._internal_groupid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_groupid());
            }
            // int32 typeId = 4;
            if (this_._internal_typeid_() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_typeid_());
            }
            // int32 namespaceId = 5;
            if (this_._internal_namespaceid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_namespaceid());
            }
            // int32 classId = 6;
            if (this_._internal_classid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_classid());
            }
            // int32 methodId = 7;
            if (this_._internal_methodid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_methodid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageHeader*>(&to_msg);
  auto& from = static_cast<const MessageHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GaoProtobuf.MessageHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fromid() != 0) {
    _this->_impl_.fromid_ = from._impl_.fromid_;
  }
  if (from._internal_toid() != 0) {
    _this->_impl_.toid_ = from._impl_.toid_;
  }
  if (from._internal_groupid() != 0) {
    _this->_impl_.groupid_ = from._impl_.groupid_;
  }
  if (from._internal_typeid_() != 0) {
    _this->_impl_.typeid__ = from._impl_.typeid__;
  }
  if (from._internal_namespaceid() != 0) {
    _this->_impl_.namespaceid_ = from._impl_.namespaceid_;
  }
  if (from._internal_classid() != 0) {
    _this->_impl_.classid_ = from._impl_.classid_;
  }
  if (from._internal_methodid() != 0) {
    _this->_impl_.methodid_ = from._impl_.methodid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageHeader::CopyFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GaoProtobuf.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageHeader::InternalSwap(MessageHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.methodid_)
      + sizeof(MessageHeader::_impl_.methodid_)
      - PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.fromid_)>(
          reinterpret_cast<char*>(&_impl_.fromid_),
          reinterpret_cast<char*>(&other->_impl_.fromid_));
}

::google::protobuf::Metadata MessageHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace GaoProtobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_MessageHeader_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
